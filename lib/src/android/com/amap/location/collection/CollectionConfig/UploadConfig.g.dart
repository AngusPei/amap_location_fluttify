//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_collection_CollectionConfig_UploadConfig extends java_lang_Object  {
  // generate getters
  

  // generate setters
  

  // generate methods
  Future<bool> isUploadWithLocatorEnabled() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::isUploadWithLocatorEnabled([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::isUploadWithLocatorEnabled', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setUploadWithLocatorEnabled(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::setUploadWithLocatorEnabled([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::setUploadWithLocatorEnabled', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<bool> isNonWifiUploadEnabled() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::isNonWifiUploadEnabled([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::isNonWifiUploadEnabled', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setNonWifiUploadEnabled(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::setNonWifiUploadEnabled([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::setNonWifiUploadEnabled', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<int> getMaxWifiUploadSizePerDay() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::getMaxWifiUploadSizePerDay([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::getMaxWifiUploadSizePerDay', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setMaxWifiUploadSizePerDay(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::setMaxWifiUploadSizePerDay([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::setMaxWifiUploadSizePerDay', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<int> getMaxMobileUploadSizePerDay() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::getMaxMobileUploadSizePerDay([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::getMaxMobileUploadSizePerDay', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setMaxMobileUploadSizePerDay(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::setMaxMobileUploadSizePerDay([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::setMaxMobileUploadSizePerDay', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<int> getMaxUploadFailCount() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::getMaxUploadFailCount([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::getMaxUploadFailCount', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setMaxUploadFailCount(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.UploadConfig@$refId::setMaxUploadFailCount([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.UploadConfig::setMaxUploadFailCount', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}