//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_collection_CollectionConfig_FpsCollectorConfig extends java_lang_Object  {
  // generate getters
  

  // generate setters
  

  // generate methods
  Future<bool> isEnabled() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::isEnabled([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::isEnabled', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setEnabled(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::setEnabled([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::setEnabled', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<bool> isScanWifiAllowed() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::isScanWifiAllowed([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::isScanWifiAllowed', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setScanWifiAllowed(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::setScanWifiAllowed([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::setScanWifiAllowed', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<bool> isScanActiveAllowed() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::isScanActiveAllowed([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::isScanActiveAllowed', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setScanActiveAllowed(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::setScanActiveAllowed([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::setScanActiveAllowed', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<bool> isWifiFilterByUpdated() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::isWifiFilterByUpdated([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::isWifiFilterByUpdated', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setWifiFilterByUpdated(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::setWifiFilterByUpdated([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::setWifiFilterByUpdated', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<int> getScanWifiInterval() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::getScanWifiInterval([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::getScanWifiInterval', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<void> setScanWifiInterval(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.collection.CollectionConfig.FpsCollectorConfig@$refId::setScanWifiInterval([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.collection.CollectionConfig.FpsCollectorConfig::setScanWifiInterval', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}