//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_common_model_CellStatus extends java_lang_Object  {
  // generate getters
  Future<int> get_updateTime() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellStatus::get_updateTime", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_cellType() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellStatus::get_cellType", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_networkOperator() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellStatus::get_networkOperator", {'refId': refId});
  
    return result;
  }
  
  Future<com_amap_location_common_model_CellState> get_mainCell() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellStatus::get_mainCell", {'refId': refId});
    kNativeObjectPool.add(com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify');
    return com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify';
  }
  
  Future<com_amap_location_common_model_CellState> get_mainCell2() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellStatus::get_mainCell2", {'refId': refId});
    kNativeObjectPool.add(com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify');
    return com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify';
  }
  

  // generate setters
  Future<void> set_updateTime(int updateTime) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::set_updateTime', {'refId': refId, "updateTime": updateTime});
  
  
  }
  
  Future<void> set_cellType(int cellType) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::set_cellType', {'refId': refId, "cellType": cellType});
  
  
  }
  
  Future<void> set_networkOperator(String networkOperator) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::set_networkOperator', {'refId': refId, "networkOperator": networkOperator});
  
  
  }
  
  Future<void> set_mainCell(com_amap_location_common_model_CellState mainCell) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::set_mainCell', {'refId': refId, "mainCell": mainCell.refId});
  
  
  }
  
  Future<void> set_mainCell2(com_amap_location_common_model_CellState mainCell2) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::set_mainCell2', {'refId': refId, "mainCell2": mainCell2.refId});
  
  
  }
  

  // generate methods
  Future<void> addHistoryCell(List<com_amap_location_common_model_CellStatus_HistoryCell> var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellStatus@$refId::addHistoryCell([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::addHistoryCell', {"var1": var1.map((it) => it.refId).toList(), "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<List<com_amap_location_common_model_CellStatus_HistoryCell>> getHistoryCells() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellStatus@$refId::getHistoryCells([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::getHistoryCells', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.addAll((result as List).cast<int>().map((it) => com_amap_location_common_model_CellStatus_HistoryCell()..refId = it..tag = 'amap_location_fluttify').toList());
      return (result as List).cast<int>().map((it) => com_amap_location_common_model_CellStatus_HistoryCell()..refId = it..tag = 'amap_location_fluttify').toList();
    }
  }
  
  Future<com_amap_location_common_model_CellStatus> clone() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellStatus@$refId::clone([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::clone', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_CellStatus()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_CellStatus()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
  Future<String> toStringSimple() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellStatus@$refId::toStringSimple([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellStatus::toStringSimple', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}