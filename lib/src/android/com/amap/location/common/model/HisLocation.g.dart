//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_common_model_HisLocation extends java_lang_Object  {
  // generate getters
  Future<int> get_time() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_time", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_lon() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_lon", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_lat() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_lat", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_radius() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_radius", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_locType() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_locType", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_retype() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_retype", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_subretype() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.HisLocation::get_subretype", {'refId': refId});
  
    return result;
  }
  

  // generate setters
  Future<void> set_time(int time) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_time', {'refId': refId, "time": time});
  
  
  }
  
  Future<void> set_lon(int lon) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_lon', {'refId': refId, "lon": lon});
  
  
  }
  
  Future<void> set_lat(int lat) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_lat', {'refId': refId, "lat": lat});
  
  
  }
  
  Future<void> set_radius(int radius) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_radius', {'refId': refId, "radius": radius});
  
  
  }
  
  Future<void> set_locType(int locType) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_locType', {'refId': refId, "locType": locType});
  
  
  }
  
  Future<void> set_retype(int retype) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_retype', {'refId': refId, "retype": retype});
  
  
  }
  
  Future<void> set_subretype(int subretype) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::set_subretype', {'refId': refId, "subretype": subretype});
  
  
  }
  

  // generate methods
  Future<double> distanceTo(com_amap_location_common_model_HisLocation var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.HisLocation@$refId::distanceTo([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::distanceTo', {"var1": var1.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<com_amap_location_common_model_HisLocation> makeLocationByGpsLocation(android_location_Location var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.HisLocation::makeLocationByGpsLocation([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::makeLocationByGpsLocation', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
  static Future<com_amap_location_common_model_HisLocation> makeLocationByNetworkLocation(com_amap_location_common_model_AmapLoc var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.HisLocation::makeLocationByNetworkLocation([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::makeLocationByNetworkLocation', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
  static Future<com_amap_location_common_model_HisLocation> makeLocationByText(String var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.HisLocation::makeLocationByText([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.HisLocation::makeLocationByText', {"var0": var0});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_HisLocation()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
}