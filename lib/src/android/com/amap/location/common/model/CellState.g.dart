//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_common_model_CellState extends java_lang_Object  {
  // generate getters
  Future<int> get_type() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_type", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_mcc() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_mcc", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_mnc() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_mnc", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_lac() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_lac", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_cid() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_cid", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_sid() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_sid", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_nid() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_nid", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_bid() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_bid", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_signalStrength() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_signalStrength", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_latitude() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_latitude", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_longitude() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_longitude", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_lastUpdateTimeMills() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_lastUpdateTimeMills", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_lastUpdateUtcMills() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_lastUpdateUtcMills", {'refId': refId});
  
    return result;
  }
  
  Future<bool> get_registered() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_registered", {'refId': refId});
  
    return result;
  }
  
  Future<bool> get_newapi() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.CellState::get_newapi", {'refId': refId});
  
    return result;
  }
  

  // generate setters
  Future<void> set_type(int type) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_type', {'refId': refId, "type": type});
  
  
  }
  
  Future<void> set_mcc(int mcc) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_mcc', {'refId': refId, "mcc": mcc});
  
  
  }
  
  Future<void> set_mnc(int mnc) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_mnc', {'refId': refId, "mnc": mnc});
  
  
  }
  
  Future<void> set_lac(int lac) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_lac', {'refId': refId, "lac": lac});
  
  
  }
  
  Future<void> set_cid(int cid) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_cid', {'refId': refId, "cid": cid});
  
  
  }
  
  Future<void> set_sid(int sid) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_sid', {'refId': refId, "sid": sid});
  
  
  }
  
  Future<void> set_nid(int nid) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_nid', {'refId': refId, "nid": nid});
  
  
  }
  
  Future<void> set_bid(int bid) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_bid', {'refId': refId, "bid": bid});
  
  
  }
  
  Future<void> set_signalStrength(int signalStrength) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_signalStrength', {'refId': refId, "signalStrength": signalStrength});
  
  
  }
  
  Future<void> set_latitude(int latitude) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_latitude', {'refId': refId, "latitude": latitude});
  
  
  }
  
  Future<void> set_longitude(int longitude) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_longitude', {'refId': refId, "longitude": longitude});
  
  
  }
  
  Future<void> set_lastUpdateTimeMills(int lastUpdateTimeMills) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_lastUpdateTimeMills', {'refId': refId, "lastUpdateTimeMills": lastUpdateTimeMills});
  
  
  }
  
  Future<void> set_lastUpdateUtcMills(int lastUpdateUtcMills) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_lastUpdateUtcMills', {'refId': refId, "lastUpdateUtcMills": lastUpdateUtcMills});
  
  
  }
  
  Future<void> set_registered(bool registered) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_registered', {'refId': refId, "registered": registered});
  
  
  }
  
  Future<void> set_newapi(bool newapi) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::set_newapi', {'refId': refId, "newapi": newapi});
  
  
  }
  

  // generate methods
  Future<String> getKey() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellState@$refId::getKey([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::getKey', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<String> getKeyWithOutInterface() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellState@$refId::getKeyWithOutInterface([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::getKeyWithOutInterface', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<bool> isValid() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellState@$refId::isValid([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::isValid', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<com_amap_location_common_model_CellState> clone() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.CellState@$refId::clone([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.CellState::clone', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_CellState()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
}