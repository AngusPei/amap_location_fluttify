//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_location_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_location_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
class com_amap_location_common_model_FPS extends java_lang_Object  {
  // generate getters
  Future<com_amap_location_common_model_CellStatus> get_cellStatus() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_cellStatus", {'refId': refId});
    kNativeObjectPool.add(com_amap_location_common_model_CellStatus()..refId = result..tag = 'amap_location_fluttify');
    return com_amap_location_common_model_CellStatus()..refId = result..tag = 'amap_location_fluttify';
  }
  
  Future<com_amap_location_common_model_WifiStatus> get_wifiStatus() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_wifiStatus", {'refId': refId});
    kNativeObjectPool.add(com_amap_location_common_model_WifiStatus()..refId = result..tag = 'amap_location_fluttify');
    return com_amap_location_common_model_WifiStatus()..refId = result..tag = 'amap_location_fluttify';
  }
  
  Future<double> get_latitude() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_latitude", {'refId': refId});
  
    return result;
  }
  
  Future<double> get_longitude() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_longitude", {'refId': refId});
  
    return result;
  }
  
  Future<double> get_accuracy() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_accuracy", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_provider() async {
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod("com.amap.location.common.model.FPS::get_provider", {'refId': refId});
  
    return result;
  }
  

  // generate setters
  Future<void> set_cellStatus(com_amap_location_common_model_CellStatus cellStatus) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_cellStatus', {'refId': refId, "cellStatus": cellStatus.refId});
  
  
  }
  
  Future<void> set_wifiStatus(com_amap_location_common_model_WifiStatus wifiStatus) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_wifiStatus', {'refId': refId, "wifiStatus": wifiStatus.refId});
  
  
  }
  
  Future<void> set_latitude(double latitude) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_latitude', {'refId': refId, "latitude": latitude});
  
  
  }
  
  Future<void> set_longitude(double longitude) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_longitude', {'refId': refId, "longitude": longitude});
  
  
  }
  
  Future<void> set_accuracy(double accuracy) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_accuracy', {'refId': refId, "accuracy": accuracy});
  
  
  }
  
  Future<void> set_provider(int provider) async {
    await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::set_provider', {'refId': refId, "provider": provider});
  
  
  }
  

  // generate methods
  Future<com_amap_location_common_model_FPS> clone() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.FPS@$refId::clone([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::clone', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(com_amap_location_common_model_FPS()..refId = result..tag = 'amap_location_fluttify');
      return com_amap_location_common_model_FPS()..refId = result..tag = 'amap_location_fluttify';
    }
  }
  
  Future<String> toStringSimple() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.amap.location.common.model.FPS@$refId::toStringSimple([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_location_fluttify').invokeMethod('com.amap.location.common.model.FPS::toStringSimple', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
}