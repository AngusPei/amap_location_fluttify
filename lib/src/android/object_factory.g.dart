// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:amap_location_fluttify/src/android/android.export.g.dart';

final _channel = MethodChannel('me.yohom/amap_location_fluttify');


Future<com_autonavi_httpdns_HttpDnsManager> createcom_autonavi_httpdns_HttpDnsManager__android_content_Context(android_content_Context var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_autonavi_httpdns_HttpDnsManager__android_content_Context', {"var1": var1.refId});
  final object = com_autonavi_httpdns_HttpDnsManager()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_autonavi_aps_amapapi_model_AMapLocationServer> createcom_autonavi_aps_amapapi_model_AMapLocationServer__String(String var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_autonavi_aps_amapapi_model_AMapLocationServer__String', {"var1": var1});
  final object = com_autonavi_aps_amapapi_model_AMapLocationServer()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_collection_CollectionManagerProxy> createcom_amap_location_collection_CollectionManagerProxy__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_collection_CollectionManagerProxy__');
  final object = com_amap_location_collection_CollectionManagerProxy()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_collection_CollectionConfig> createcom_amap_location_collection_CollectionConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_collection_CollectionConfig__');
  final object = com_amap_location_collection_CollectionConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_collection_CollectionConfig_UploadConfig> createcom_amap_location_collection_CollectionConfig_UploadConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_collection_CollectionConfig_UploadConfig__');
  final object = com_amap_location_collection_CollectionConfig_UploadConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_collection_CollectionConfig_TrackCollectorConfig> createcom_amap_location_collection_CollectionConfig_TrackCollectorConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_collection_CollectionConfig_TrackCollectorConfig__');
  final object = com_amap_location_collection_CollectionConfig_TrackCollectorConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_collection_CollectionConfig_FpsCollectorConfig> createcom_amap_location_collection_CollectionConfig_FpsCollectorConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_collection_CollectionConfig_FpsCollectorConfig__');
  final object = com_amap_location_collection_CollectionConfig_FpsCollectorConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_security_Core> createcom_amap_location_security_Core__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_security_Core__');
  final object = com_amap_location_security_Core()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_HeaderConfig> createcom_amap_location_common_HeaderConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_HeaderConfig__');
  final object = com_amap_location_common_HeaderConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_util_FileUtil> createcom_amap_location_common_util_FileUtil__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_util_FileUtil__');
  final object = com_amap_location_common_util_FileUtil()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_network_HttpRequest> createcom_amap_location_common_network_HttpRequest__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_network_HttpRequest__');
  final object = com_amap_location_common_network_HttpRequest()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_network_HttpResponse> createcom_amap_location_common_network_HttpResponse__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_network_HttpResponse__');
  final object = com_amap_location_common_network_HttpResponse()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_Adjacent_Borders> createcom_amap_location_common_model_Adjacent_Borders__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_Adjacent_Borders__');
  final object = com_amap_location_common_model_Adjacent_Borders()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_CellStatus_HistoryCell> createcom_amap_location_common_model_CellStatus_HistoryCell__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_CellStatus_HistoryCell__');
  final object = com_amap_location_common_model_CellStatus_HistoryCell()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_CellStatus_HistoryCell> createcom_amap_location_common_model_CellStatus_HistoryCell__com_amap_location_common_model_CellState(com_amap_location_common_model_CellState var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_CellStatus_HistoryCell__com_amap_location_common_model_CellState', {"var1": var1.refId});
  final object = com_amap_location_common_model_CellStatus_HistoryCell()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_CellStatus> createcom_amap_location_common_model_CellStatus__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_CellStatus__');
  final object = com_amap_location_common_model_CellStatus()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_Adjacent> createcom_amap_location_common_model_Adjacent__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_Adjacent__');
  final object = com_amap_location_common_model_Adjacent()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_CellState> createcom_amap_location_common_model_CellState__int__boolean(int var1, bool var2) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_CellState__int__boolean', {"var1": var1, "var2": var2});
  final object = com_amap_location_common_model_CellState()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_CellState> createcom_amap_location_common_model_CellState__int__boolean__boolean(int var1, bool var2, bool var3) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_CellState__int__boolean__boolean', {"var1": var1, "var2": var2, "var3": var3});
  final object = com_amap_location_common_model_CellState()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WiFi> createcom_amap_location_common_model_WiFi__long__String__int__int__long(int var1, String var3, int var4, int var5, int var6) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WiFi__long__String__int__int__long', {"var1": var1, "var3": var3, "var4": var4, "var5": var5, "var6": var6});
  final object = com_amap_location_common_model_WiFi()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WiFi> createcom_amap_location_common_model_WiFi__long__String__int__int__long__boolean(int var1, String var3, int var4, int var5, int var6, bool var8) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WiFi__long__String__int__int__long__boolean', {"var1": var1, "var3": var3, "var4": var4, "var5": var5, "var6": var6, "var8": var8});
  final object = com_amap_location_common_model_WiFi()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WiFi> createcom_amap_location_common_model_WiFi__long__String__int__int__long__long__boolean__int(int var1, String var3, int var4, int var5, int var6, int var8, bool var10, int var11) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WiFi__long__String__int__int__long__long__boolean__int', {"var1": var1, "var3": var3, "var4": var4, "var5": var5, "var6": var6, "var8": var8, "var10": var10, "var11": var11});
  final object = com_amap_location_common_model_WiFi()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_HisLocation> createcom_amap_location_common_model_HisLocation__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_HisLocation__');
  final object = com_amap_location_common_model_HisLocation()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WifiStatus> createcom_amap_location_common_model_WifiStatus__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WifiStatus__');
  final object = com_amap_location_common_model_WifiStatus()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WifiStatus> createcom_amap_location_common_model_WifiStatus__long(int var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WifiStatus__long', {"var1": var1});
  final object = com_amap_location_common_model_WifiStatus()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_WifiStatus> createcom_amap_location_common_model_WifiStatus__long__com_amap_location_common_model_WiFi__int(int var1, List<com_amap_location_common_model_WiFi> var3, int var4) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_WifiStatus__long__com_amap_location_common_model_WiFi__int', {"var1": var1, "var3": var3.map((it) => it.refId).toList(), "var4": var4});
  final object = com_amap_location_common_model_WifiStatus()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_Adjacent_Neighbors> createcom_amap_location_common_model_Adjacent_Neighbors__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_Adjacent_Neighbors__');
  final object = com_amap_location_common_model_Adjacent_Neighbors()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_model_FPS> createcom_amap_location_common_model_FPS__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_model_FPS__');
  final object = com_amap_location_common_model_FPS()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_common_log_LogConfig_Builder> createcom_amap_location_common_log_LogConfig_Builder__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_common_log_LogConfig_Builder__');
  final object = com_amap_location_common_log_LogConfig_Builder()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_BasicLocateConfig> createcom_amap_location_BasicLocateConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_BasicLocateConfig__');
  final object = com_amap_location_BasicLocateConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_offline_OfflineConfig> createcom_amap_location_offline_OfflineConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_offline_OfflineConfig__');
  final object = com_amap_location_offline_OfflineConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_offline_OfflineProvider> createcom_amap_location_offline_OfflineProvider__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_offline_OfflineProvider__');
  final object = com_amap_location_offline_OfflineProvider()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_location_offline_upload_UploadConfig> createcom_amap_location_offline_upload_UploadConfig__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_location_offline_upload_UploadConfig__');
  final object = com_amap_location_offline_upload_UploadConfig()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_opensdk_co_CoManager> createcom_amap_opensdk_co_CoManager__android_content_Context(android_content_Context var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_opensdk_co_CoManager__android_content_Context', {"var1": var1.refId});
  final object = com_amap_opensdk_co_CoManager()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}


Future<com_amap_api_location_AMapLocationClient> createcom_amap_api_location_AMapLocationClient__android_content_Context(android_content_Context var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocationClient__android_content_Context', {"var1": var1.refId});
  final object = com_amap_api_location_AMapLocationClient()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_AMapLocationClient> createcom_amap_api_location_AMapLocationClient__android_content_Context__android_content_Intent(android_content_Context var1, android_content_Intent var2) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocationClient__android_content_Context__android_content_Intent', {"var1": var1.refId, "var2": var2.refId});
  final object = com_amap_api_location_AMapLocationClient()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_DPoint> createcom_amap_api_location_DPoint__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_DPoint__');
  final object = com_amap_api_location_DPoint()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_DPoint> createcom_amap_api_location_DPoint__double__double(double var1, double var3) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_DPoint__double__double', {"var1": var1, "var3": var3});
  final object = com_amap_api_location_DPoint()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_CoordinateConverter> createcom_amap_api_location_CoordinateConverter__android_content_Context(android_content_Context var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_CoordinateConverter__android_content_Context', {"var1": var1.refId});
  final object = com_amap_api_location_CoordinateConverter()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_CoordUtil> createcom_amap_api_location_CoordUtil__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_CoordUtil__');
  final object = com_amap_api_location_CoordUtil()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_UmidtokenInfo> createcom_amap_api_location_UmidtokenInfo__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_UmidtokenInfo__');
  final object = com_amap_api_location_UmidtokenInfo()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_AMapLocation> createcom_amap_api_location_AMapLocation__String(String var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocation__String', {"var1": var1});
  final object = com_amap_api_location_AMapLocation()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_AMapLocation> createcom_amap_api_location_AMapLocation__android_location_Location(android_location_Location var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocation__android_location_Location', {"var1": var1.refId});
  final object = com_amap_api_location_AMapLocation()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_AMapLocationClientOption> createcom_amap_api_location_AMapLocationClientOption__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocationClientOption__');
  final object = com_amap_api_location_AMapLocationClientOption()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_location_AMapLocationQualityReport> createcom_amap_api_location_AMapLocationQualityReport__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_location_AMapLocationQualityReport__');
  final object = com_amap_api_location_AMapLocationQualityReport()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_fence_DistrictItem> createcom_amap_api_fence_DistrictItem__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_fence_DistrictItem__');
  final object = com_amap_api_fence_DistrictItem()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_fence_GeoFenceClient> createcom_amap_api_fence_GeoFenceClient__android_content_Context(android_content_Context var1) async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_fence_GeoFenceClient__android_content_Context', {"var1": var1.refId});
  final object = com_amap_api_fence_GeoFenceClient()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_fence_GeoFence> createcom_amap_api_fence_GeoFence__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_fence_GeoFence__');
  final object = com_amap_api_fence_GeoFence()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_amap_api_fence_PoiItem> createcom_amap_api_fence_PoiItem__() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createcom_amap_api_fence_PoiItem__');
  final object = com_amap_api_fence_PoiItem()..refId = refId..tag = 'amap_location_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

